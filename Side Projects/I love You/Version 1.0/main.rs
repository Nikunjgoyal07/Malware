#![windows_subsystem = "windows"]
// use notify_rust::Notification;
// use std::{thread, time};
//
// fn main() {
//         loop {
//                 Notification::new()
//                     .summary("I love you ")
//                     .body("I love you . \n I love you \n I love you . \n ")
//                     .show()
//                     .unwrap();
//                 thread::sleep(time::Duration::from_millis(10000));
//         }
// }


extern crate winapi;

use std::ptr;
use winapi::um::winuser::{MessageBoxW, MB_ICONINFORMATION, MB_OK, MB_SYSTEMMODAL};
use std::{thread, time};



fn main() {

    let text = "I love you";
    let title = "I love you";

    loop {
        unsafe {
            MessageBoxW(
                ptr::null_mut(),
                text.encode_utf16().chain(std::iter::once(0)).collect::<Vec<_>>().as_ptr(),
                title.encode_utf16().chain(std::iter::once(0)).collect::<Vec<_>>().as_ptr(),
                MB_OK | MB_ICONINFORMATION | MB_SYSTEMMODAL,
            );
        }
        thread::sleep(time::Duration::from_millis(100));
    }
}



